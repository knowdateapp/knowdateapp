swagger: "2.0"
info:
  title: Knowledge Base Service
  version: 0.0.1
tags:
  - name: KnowledgeBaseService
consumes:
  - application/json
produces:
  - application/json
paths:
  /api/v1/knowledge-bases:
    post:
      operationId: CreateKnowledgeBase
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/knowledge_baseCreateKnowledgeBaseResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/knowledge_baseCreateKnowledgeBaseRequest'
      tags:
        - KnowledgeBaseService
  /api/v1/knowledge-bases/{id}:
    get:
      operationId: GetKnowledgeBaseById
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/knowledge_baseGetKnowledgeBaseByIdResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: string
      tags:
        - KnowledgeBaseService
    delete:
      operationId: DeleteKnowledgeBaseById
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/knowledge_baseDeleteKnowledgeBaseByIdResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: string
      tags:
        - KnowledgeBaseService
definitions:
  commonCollection:
    type: object
    properties:
      id:
        type: string
      knowledge_base_id:
        type: string
      owner_id:
        type: string
      topic:
        type: string
      description:
        type: string
      topic_ids:
        type: array
        items:
          type: string
      created_at:
        type: string
        format: date-time
  commonKnowledgeBase:
    type: object
    properties:
      id:
        type: string
      owner_id:
        type: string
      topic:
        type: string
      description:
        type: string
      collections:
        type: array
        items:
          type: object
          $ref: '#/definitions/commonCollection'
      created_at:
        type: string
        format: date-time
  knowledge_baseCreateKnowledgeBaseRequest:
    type: object
    properties:
      owner_id:
        type: string
      topic:
        type: string
      description:
        type: string
  knowledge_baseCreateKnowledgeBaseResponse:
    type: object
    properties:
      knowledge_base:
        $ref: '#/definitions/commonKnowledgeBase'
  knowledge_baseDeleteKnowledgeBaseByIdResponse:
    type: object
  knowledge_baseGetKnowledgeBaseByIdResponse:
    type: object
    properties:
      knowledge_base:
        $ref: '#/definitions/commonKnowledgeBase'
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
