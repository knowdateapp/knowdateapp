syntax = "proto3";

package knowdateapp.knowledge.v1.collection;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

import "api/v1/common/collection.proto";

option go_package = "github.com/knowdateapp/knowdateapp/backend/knowledge/internal/pb/api/v1/collection";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Collection Service"
    version: "0.0.1"
  }
};

service CollectionService {

  rpc CreateCollection(CreateCollectionRequest) returns (CreateCollectionResponse) {
    option (google.api.http) = {
      post: "/api/v1/knowledge-bases/{knowledge_base_id}/collections"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      operation_id: "CreateCollection"
    };
  }

  rpc GetCollectionById(GetCollectionByIdRequest) returns (GetCollectionByIdResponse) {
    option (google.api.http) = {
      get: "/api/v1/knowledge-bases/{knowledge_base_id}/collections/{collection_id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      operation_id: "GetCollectionById"
    };
  }

  rpc DeleteCollectionById(DeleteCollectionByIdRequest) returns (DeleteCollectionByIdResponse) {
    option (google.api.http) = {
      delete: "/api/v1/knowledge-bases/{knowledge_base_id}/collections/{collection_id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      operation_id: "DeleteCollectionById"
    };
  }

}

message CreateCollectionRequest {
  string knowledge_base_id = 1;
  string owner_id = 2;
  string topic = 3;
  string description = 4;
}

message CreateCollectionResponse {
  common.Collection collection = 1;
}

message GetCollectionByIdRequest {
  string knowledge_base_id = 1;
  string collection_id = 2;
}

message GetCollectionByIdResponse {
  common.Collection collection = 1;
}

message DeleteCollectionByIdRequest {
  string knowledge_base_id = 1;
  string collection_id = 2;
}

message DeleteCollectionByIdResponse {
}
