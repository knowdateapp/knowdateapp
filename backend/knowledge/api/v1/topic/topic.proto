syntax = "proto3";

package knowdateapp.knowledge.v1.topic;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

import "api/v1/common/topic.proto";

option go_package = "github.com/knowdateapp/knowdateapp/backend/knowledge/internal/pb/api/v1/topic";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Topic Service"
    version: "0.0.1"
  }
};

service TopicService {

  rpc CreateTopic(CreateTopicRequest) returns (CreateTopicResponse) {
    option (google.api.http) = {
      post: "/api/v1/knowledge-bases/{knowledge_base_id}/collections/{collection_id}/topics"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      operation_id: "CreateTopic"
    };
  }

  rpc GetByCollection(GetByCollectionRequest) returns (GetByCollectionResponse) {
    option (google.api.http) = {
      get: "/api/v1/knowledge-bases/{knowledge_base_id}/collections/{collection_id}/topics"
    };
  }

  rpc GetTopicById(GetTopicByIdRequest) returns (GetTopicByIdResponse) {
    option (google.api.http) = {
      get: "/api/v1/knowledge-bases/{knowledge_base_id}/collections/{collection_id}/topics/{topic_id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      operation_id: "GetTopicById"
    };
  }

  rpc DeleteTopicById(DeleteTopicByIdRequest) returns (DeleteTopicByIdResponse) {
    option (google.api.http) = {
      delete: "/api/v1/knowledge-bases/{knowledge_base_id}/collections/{collection_id}/topics/{topic_id}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      operation_id: "DeleteTopicById"
    };
  }

}

message CreateTopicRequest {
  string knowledge_base_id = 1;
  string collection_id = 2;
  string owner_id = 3;
  string topic = 4;
  string description = 5;
}

message CreateTopicResponse {
  common.Topic topic = 1;
}

message GetByCollectionRequest {
  string knowledge_base_id = 1;
  string collection_id = 2;
}

message GetByCollectionResponse {
  repeated common.Topic topics = 1;
}

message GetTopicByIdRequest {
  string knowledge_base_id = 1;
  string collection_id = 2;
  string topic_id = 3;
}

message GetTopicByIdResponse {
  common.Topic topic = 1;
}

message DeleteTopicByIdRequest {
  string knowledge_base_id = 1;
  string collection_id = 2;
  string topic_id = 3;
}

message DeleteTopicByIdResponse {
}
